{"version":3,"sources":["utils/BooksAPI.js","components/mediaContext/MediaContext.js","components/Book.js","components/BookSearch.js","components/Loader.js","components/CurrentlyReadingShelf.js","components/Read.js","components/WantToReadShelf.js","components/BookShelf.js","components/App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","update","book","shelf","fetch","id","method","body","JSON","stringify","then","res","json","search","query","maxResults","data","books","MediaContext","createContext","MediaContextProvider","props","useState","setBooks","shelves","setShelves","setSearch","getBooks","a","useEffect","handleSelections","updatedShelves","map","b","BooksAPI","filter","updatedSearch","undefined","getSearchBooks","error","filteredSearch","ele","indexOf","e","target","preventDefault","bookId","dataTransfer","getData","Provider","value","drag","setData","allowDrop","drop","children","Book","useContext","onDragStart","draggable","className","imageLinks","style","width","height","backgroundImage","thumbnail","onChange","disabled","title","authors","join","BookSearch","setQuery","showingBooks","length","author","toLowerCase","includes","to","type","placeholder","updateQuery","Loader","CurrentlyReadingShelf","onDrop","onDragOver","index","Read","WantToReadShelf","BookShelf","App","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8a122a3c.chunk.js","sourcesContent":["const api = \"https://reactnd-books-api.udacity.com\";\n\nlet token = localStorage.token;\n\nif (!token) token = localStorage.token = Math.random().toString(36).substr(-8);\n\nconst headers = {\n  Accept: \"application/json\",\n  Authorization: token,\n};\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then((res) => res.json())\n    .then((data) => data.book);\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then((res) => res.json())\n    .then((data) => data.books);\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: \"PUT\",\n    headers: {\n      ...headers,\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ shelf }),\n  }).then((res) => res.json());\n\nexport const search = (query, maxResults) =>\n  fetch(`${api}/search`, {\n    method: \"POST\",\n    headers: {\n      ...headers,\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ query, maxResults }),\n  })\n    .then((res) => res.json())\n    .then((data) => data.books);\n","import { createContext, useEffect, useState } from \"react\";\r\nimport * as BooksAPI from '../../utils/BooksAPI';\r\n\r\n\r\nexport let MediaContext = createContext([]);\r\nexport function MediaContextProvider(props) {\r\n\r\n    // the main array = [ books with shelves + books from search ]\r\n    const [books, setBooks] = useState([]);\r\n    // books with shelf\r\n    const [shelves, setShelves] = useState([]);\r\n    // books from search\r\n    const [search, setSearch] = useState([]);\r\n\r\n    // get books with assigned shelf\r\n    const getBooks = async () => {\r\n        const res = await BooksAPI.getAll();\r\n        setShelves(res);\r\n        setBooks([...res, ...search]);\r\n    };\r\n\r\n    // call getBook() in component did mount to show user saved books when open MyReads \r\n    useEffect(() => {\r\n        getBooks();\r\n    }, []);\r\n\r\n    // when user want to change the book shelf\r\n    const handleSelections = async (shelf, book) => {\r\n        // shelf, select book shelf (currentlyReading , wantToRead , read , undefined)\r\n        // book,  object contains selected book info\r\n        // case(1) the book is on the shelf and user choose (currentlyReading or wantToRead or read)\r\n        if (book.shelf === 'currentlyReading' || book.shelf === 'wantToRead' || book.shelf === 'read') {\r\n            if (shelf !== 'none') {\r\n                let updatedShelves = shelves.map((b) => { return b.id === book.id ? { ...book, shelf } : b });\r\n                setShelves(updatedShelves);\r\n                setBooks([...updatedShelves, ...search]);\r\n                await BooksAPI.update(book, shelf);\r\n            }\r\n            // case(2) the book is on the shelf and user choose (none)\r\n            else {\r\n                let updatedShelves = shelves.filter((b) => { return b.id !== book.id });\r\n                let updatedSearch = [...search, { ...book, shelf: undefined }];\r\n                setShelves(updatedShelves);\r\n                setSearch(updatedSearch);\r\n                setBooks([...updatedShelves, ...updatedSearch]);\r\n                await BooksAPI.update(book, shelf);\r\n            }\r\n        }\r\n        // case(3) the book is not on the shelf and user choose (currentlyReading or wantToRead or read)\r\n        else if (book.shelf === undefined) {\r\n            let updatedShelves = [...shelves, { ...book, shelf }];\r\n            let updatedSearch = search.filter((b) => { return b.id !== book.id });\r\n            setShelves(updatedShelves);\r\n            setSearch(updatedSearch);\r\n            setBooks([...updatedShelves, ...updatedSearch]);\r\n            await BooksAPI.update(book, shelf);\r\n        }\r\n    };\r\n\r\n    // when user type in the search input\r\n    const getSearchBooks = async (query) => {\r\n        let res = await BooksAPI.search(query);\r\n        // check if there is a book in shelves and search with same id\r\n        // this will make problem when adding key={} to the book component, to help in versual dom\r\n        if (res.error !== 'empty query') {\r\n            let filteredSearch = res.filter((ele) => { return shelves.map((b) => { return b.id }).indexOf(ele.id) === -1 });\r\n            setSearch(filteredSearch);\r\n            setBooks([...shelves, ...filteredSearch]);\r\n        }\r\n    };\r\n\r\n    // Drag\r\n    function allowDrop(e) {\r\n        e.preventDefault();\r\n    }\r\n\r\n    function drag(e) {\r\n        // console.log(e.target);\r\n        e.dataTransfer.setData(\"text\", e.target.id);\r\n    }\r\n\r\n    async function drop(e) {\r\n        let shelf = e.target.id;\r\n        if (shelf === 'currentlyReading' || shelf === 'wantToRead' || shelf === 'read') {\r\n            e.preventDefault();\r\n\r\n            let bookId = e.dataTransfer.getData(\"text\");\r\n            let [book] = shelves.filter((b) => { return b.id === bookId });\r\n\r\n            let updatedShelves = shelves.map((b) => { return b.id === bookId ? { ...book, shelf } : b });\r\n            setShelves(updatedShelves);\r\n            setBooks([...updatedShelves, ...search]);\r\n            await BooksAPI.update(book, shelf);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return <MediaContext.Provider value={{ books, handleSelections, getSearchBooks, drag, allowDrop, drop }}>\r\n        {props.children}\r\n    </MediaContext.Provider>\r\n}\r\n","import { useContext } from \"react\";\nimport { MediaContext } from \"./mediaContext/MediaContext\";\n\nconst Book = ({ book }) => {\n\n    let { handleSelections, drag } = useContext(MediaContext);\n\n    return (\n        <li id={book.id} onDragStart={(e) => { drag(e) }} draggable=\"true\">\n            <div className=\"book\">\n                <div className=\"book-top\">\n                    {book.imageLinks ? <div\n                        className=\"book-cover\"\n                        style={{\n                            width: 128,\n                            height: 193,\n                            backgroundImage: `url(${book.imageLinks.thumbnail})`,\n                        }}\n                    ></div> : <div\n                        className=\"book-cover\"\n                        style={{\n                            width: 128,\n                            height: 193,\n                            backgroundImage: `url()`,\n                        }}\n                    ></div>}\n                    <div className=\"book-shelf-changer\">\n                        <select onChange={(e) => { handleSelections(e.target.value, book) }} value={book.shelf !== undefined ? book.shelf : \"none\"}>\n                            <option value=\"dis\" disabled>{book.shelf !== undefined ? 'Move to...' : 'Add to...'}</option>\n                            <option value=\"currentlyReading\">Currently Reading</option>\n                            <option value=\"wantToRead\">Want to Read</option>\n                            <option value=\"read\">Read</option>\n                            <option value=\"none\">None</option>\n                        </select>\n                    </div>\n                </div>\n                <div className=\"book-title\">{book.title}</div>\n                {book.authors ? <div className=\"book-authors\">{book.authors.join(', ')}</div> : ''}\n            </div>\n        </li>\n    )\n}\nexport default Book;\n\n","import { Link } from \"react-router-dom\";\nimport { useState,useContext } from \"react\";\nimport Book from \"./Book\";\nimport { MediaContext } from \"./mediaContext/MediaContext\";\n\nconst BookSearch = () => {\n\n    let { books, handleSelections, getSearchBooks } = useContext(MediaContext);\n\n    // save search values in query (controlled component)\n    const [query, setQuery] = useState('');\n\n    // when user type in the search, getSearchBooks() will put search result in search state in App.js\n    const updateQuery = (query) => {\n        setQuery(query);\n        if (query) {\n            getSearchBooks(query);\n        }\n    };\n\n    // showingBooks controls showed books, when empty nothing will appear\n    let showingBooks = [];\n    if (query !== '') {\n        if (books.length !== 0) {\n            showingBooks = books.filter((book) => {\n                if (book.authors && book.authors.filter((author) => { return author.toLowerCase().includes(query.toLowerCase()) }).length !== 0) {\n                    return true;\n                }\n                else if (book.title.toLowerCase().includes(query.toLowerCase())) {\n                    return true;\n                }\n            })\n        }\n    };\n\n    return (\n        <div className=\"app\">\n            <div className=\"search-books\">\n                <div className=\"search-books-bar\">\n                    <Link className=\"close-search\" to='/'>Close</Link>\n                    <div className=\"search-books-input-wrapper\">\n                        <input\n                            type=\"text\"\n                            placeholder=\"Search by title, author, or ISBN\"\n                            value={query}\n                            onChange={(e) => { updateQuery(e.target.value) }} />\n                    </div>\n                </div>\n                <div className=\"search-books-results\">\n                    <ol className=\"books-grid\">\n                        {showingBooks.map((book) => {\n                            return <Book key={book.id} book={book} handleSelections={handleSelections} />\n                        })}\n                    </ol>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default BookSearch;\n\n","const Loader = () => {\n    return (\n        <li>\n            <div className=\"book\">\n                <div className=\"book-top\">\n                    <div\n                        className=\"book-cover\"\n                        style={{ width: 128, height: 193 }}>\n                    </div>\n                </div>\n            </div>\n        </li>\n    )\n}\nexport default Loader;","import { useContext } from \"react\";\nimport Book from \"./Book\"\nimport Loader from \"./Loader\";\nimport { MediaContext } from \"./mediaContext/MediaContext\";\nconst CurrentlyReadingShelf = () => {\n\n    let { books, allowDrop, drop } = useContext(MediaContext);\n    // for better user experience loader will appear untill get data from API\n    let loader = [0, 0];\n    return (\n        <div className=\"bookshelf\">\n            <h2 className=\"bookshelf-title\">Currently Reading</h2>\n            <div className=\"bookshelf-books\">\n                <ol className=\"books-grid\" id=\"currentlyReading\" onDrop={(e) => { drop(e) }} onDragOver={(e) => { allowDrop(e) }}>\n                    {books.length !== 0 ? books.filter((book) => { return book.shelf === 'currentlyReading' }).map((book) => {\n                        return (<Book book={book} key={book.id} />)\n                    }) : loader.map((b, index) => { return <Loader key={index} /> })}\n                </ol>\n            </div>\n        </div>\n    )\n}\nexport default CurrentlyReadingShelf;","import { useContext } from \"react\";\nimport Book from \"./Book\";\nimport Loader from \"./Loader\";\nimport { MediaContext } from \"./mediaContext/MediaContext\";\n\nconst Read = () => {\n\n    let { books,allowDrop, drop  } = useContext(MediaContext);\n    // for better user experience loader will appear untill get data from API\n    let loader = [0, 0, 0];\n    return (\n        <div className=\"bookshelf\">\n            <h2 className=\"bookshelf-title\">Read</h2>\n            <div className=\"bookshelf-books\">\n                <ol className=\"books-grid\" id=\"read\" onDrop={(e) => { drop(e) }} onDragOver={(e) => { allowDrop(e) }}>\n                    {books.length !== 0 ? books.filter((book) => { return book.shelf === 'read' }).map((book) => {\n                        return (<Book book={book} key={book.id} />)\n                    }) : loader.map((b, index) => { return <Loader key={index} /> })}\n                </ol>\n            </div>\n        </div>\n    )\n}\nexport default Read;","import { useContext } from \"react\";\nimport Book from \"./Book\";\nimport Loader from \"./Loader\";\nimport { MediaContext } from \"./mediaContext/MediaContext\";\n\nconst WantToReadShelf = () => {\n\n    let { books,allowDrop, drop  } = useContext(MediaContext);\n    // for better user experience loader will appear untill get data from API\n    let loader = [0, 0];\n    return (\n        <div className=\"bookshelf\">\n            <h2 className=\"bookshelf-title\">Want to Read</h2>\n            <div className=\"bookshelf-books\">\n                <ol className=\"books-grid\" id=\"wantToRead\" onDrop={(e) => { drop(e) }} onDragOver={(e) => { allowDrop(e) }}>\n                    {books.length !== 0 ? books.filter((book) => { return book.shelf === 'wantToRead' }).map((book) => {\n                        return (<Book book={book} key={book.id} />)\n                    }) : loader.map((b, index) => { return <Loader key={index} /> })}\n                </ol>\n            </div>\n        </div>\n    )\n}\nexport default WantToReadShelf;","import { Link } from \"react-router-dom\";\nimport CurrentlyReadingShelf from \"./CurrentlyReadingShelf\";\nimport Read from \"./Read\";\nimport WantToReadShelf from \"./WantToReadShelf\";\nconst BookShelf = () => {\n\n    return (\n        <div className=\"app\">\n            <div className=\"list-books\">\n                <div className=\"list-books-title\">\n                    <h1>MyReads</h1>\n                </div>\n                <div className=\"list-books-content\">\n                    <div>\n                        <CurrentlyReadingShelf />\n                        <WantToReadShelf />\n                        <Read />\n                    </div>\n                </div>\n                <div className=\"open-search\">\n                    <Link to='/search'>Add a book</Link>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default BookShelf;","import \"../css/App.css\";\nimport BookSearch from \"./BookSearch\";\nimport BookShelf from \"./BookShelf\";\nimport { Route, Routes } from \"react-router-dom\";\nimport { MediaContextProvider } from \"./mediaContext/MediaContext\";\n\nfunction App() {\n\n\n  return (\n    <MediaContextProvider>\n      <Routes>\n        <Route path=\"/\" element={<BookShelf />} />\n        <Route path=\"/MyReads/\" element={<BookShelf />} />\n        <Route path=\"/search\" element={<BookSearch />} />\n      </Routes>\n    </MediaContextProvider>\n  );\n}\n\nexport default App;\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./css/index.css\";\nimport App from \"./components/App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}